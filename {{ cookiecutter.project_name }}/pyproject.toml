[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "0.2.0"
description = ""
authors = [ "{{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>" ]

[tool.poetry.dependencies]
# not automatically used by poetry2nix - https://github.com/nix-community/poetry2nix/issues/570
python = "^3.11"

[tool.poetry.group.dev.dependencies]
black = "^23.9.1"
isort = "^5.12.0"
mypy = "^1.5.1"
myst-parser = "^2.0.0"
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
Sphinx = "^7.2.2"
sphinx-autoapi = "^2.1.1"
tomli = "^2.0.1"
cruft = {extras = ["pyproject"], version = "^2.15.0"}

[tool.poetry.scripts]
{{ cookiecutter.project_name }} = "{{ cookiecutter.module_name }}._cli:main"

[tool.nixpkgs]
dependencies = [ ]
dev-dependencies = [ ]

[tool.black]
line-length = 99

[tool.coverage]
html.directory = "docs/generated/coverage"
report.show_missing = true
run.source_pkgs = [ "{{ cookiecutter.module_name }}" ]
run.branch = true
xml.output = "docs/generated/coverage/coverage.xml"

[tool.cruft]
skip = [ ".git", "tests" ]

[tool.isort]
combine_as_imports = true
line_length = 99
profile = "black"
skip_gitignore = true
src_paths = [ "src", "tests" ]

[tool.mypy]
check_untyped_defs = true
files = [ "src", "tests" ]
ignore_missing_imports = true
no_implicit_optional = true
pretty = true
show_error_codes = true
warn_return_any = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = "--cov --cov-report html --cov-report xml"
testpaths = [ "tests" ]

[build-system]
requires = [ "poetry-core>=1.0.0" ]
build-backend = "poetry.core.masonry.api"
